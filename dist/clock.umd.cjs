(function(t,n){typeof exports=="object"&&typeof module<"u"?n(exports):typeof define=="function"&&define.amd?define(["exports"],n):(t=typeof globalThis<"u"?globalThis:t||self,n(t.clock={}))})(this,function(t){"use strict";var k=Object.defineProperty;var w=(t,n,c)=>n in t?k(t,n,{enumerable:!0,configurable:!0,writable:!0,value:c}):t[n]=c;var l=(t,n,c)=>(w(t,typeof n!="symbol"?n+"":n,c),c);const n=window.cancelAnimationFrame||window.clearTimeout;let c=Date.now();function f(s){const e=Date.now(),i=Math.max(0,16-(e-c)),o=setTimeout(s,i);return c=e+i,o}const h=window.requestAnimationFrame||f;function u(s){return h.call(window,s)}function d(s){n.call(window,s)}function m(s,e){return Math.floor(s/1e3)===Math.floor(e/1e3)}function a(){return`${Date.now()}-${Math.random().toString().slice(2,8)}`}class T{constructor(e){l(this,"immutableTime");l(this,"immutableLocalTime");l(this,"runTime");l(this,"currentServeTime");l(this,"rafId");l(this,"listen");l(this,"clocks");this.immutableTime=e,this.currentServeTime=e,this.immutableLocalTime=Date.now(),this.runTime=0,this.rafId=0,this.listen=[],this.clocks=[],this.tick()}get _clocks(){return this.clocks.filter(({done:e})=>!e)}addClock(e){const i=e.id??a();return this.clocks.push({...e,id:i}),i}cancelClock(e){const i=this.clocks.findIndex(o=>o.id===e);i!==-1&&this.clocks.splice(i,1)}addListen(e){const i=a();return this.listen.push({id:i,listen:e}),i}cancelListen(e){const i=this.listen.findIndex(o=>o.id===e);i!==-1&&this.listen.splice(i,1)}tick(){this.rafId=u(()=>{var i;const e=this.getRunTime();if(!m(e,this.runTime)){this.runTime=e,this.currentServeTime=this.immutableTime+e;const o=this._clocks;if(o.length)for(const r of o)r.time<=this.currentServeTime&&!r.done&&(r.done=!0,(i=r.listen)==null||i.call(r));this.listen.forEach(({listen:r})=>{r()})}this.tick()})}getRunTime(){return Date.now()-this.immutableLocalTime}destroy(){d(this.rafId)}}t.cancelRaf=d,t.createId=a,t.default=T,t.isSameSecond=m,t.raf=u,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
